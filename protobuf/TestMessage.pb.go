// Code generated by protoc-gen-go.
// source: TestMessage.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	TestMessage.proto

It has these top-level messages:
	TestMessage
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type TestMessage_EventType int32

const (
	TestMessage_ConnectionOpen  TestMessage_EventType = 0
	TestMessage_ConnectionClose TestMessage_EventType = 1
	TestMessage_Data            TestMessage_EventType = 2
)

var TestMessage_EventType_name = map[int32]string{
	0: "ConnectionOpen",
	1: "ConnectionClose",
	2: "Data",
}
var TestMessage_EventType_value = map[string]int32{
	"ConnectionOpen":  0,
	"ConnectionClose": 1,
	"Data":            2,
}

func (x TestMessage_EventType) String() string {
	return proto.EnumName(TestMessage_EventType_name, int32(x))
}
func (TestMessage_EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type TestMessage struct {
	Id   int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type TestMessage_EventType `protobuf:"varint,2,opt,name=type,enum=protobuf.TestMessage_EventType" json:"type,omitempty"`
	Data string                `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TestMessage) Reset()                    { *m = TestMessage{} }
func (m *TestMessage) String() string            { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()               {}
func (*TestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*TestMessage)(nil), "protobuf.TestMessage")
	proto.RegisterEnum("protobuf.TestMessage_EventType", TestMessage_EventType_name, TestMessage_EventType_value)
}

var fileDescriptor0 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x0c, 0x49, 0x2d, 0x2e,
	0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00,
	0x53, 0x49, 0xa5, 0x69, 0x4a, 0xcb, 0x18, 0xb9, 0xb8, 0x91, 0xe4, 0x85, 0xf8, 0xb8, 0x98, 0x32,
	0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x80, 0x2c, 0x21, 0x63, 0x2e, 0x96, 0x92, 0xca,
	0x82, 0x54, 0x09, 0x26, 0xa0, 0x08, 0x9f, 0x91, 0xbc, 0x1e, 0x4c, 0xa3, 0x1e, 0xb2, 0xa1, 0xae,
	0x65, 0xa9, 0x79, 0x25, 0x21, 0x40, 0x65, 0x41, 0x60, 0xc5, 0x42, 0x42, 0x5c, 0x2c, 0x29, 0x89,
	0x25, 0x89, 0x12, 0xcc, 0x40, 0x4d, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x1d, 0x17, 0x27, 0x5c, 0x19,
	0x50, 0x01, 0x9f, 0x73, 0x7e, 0x5e, 0x5e, 0x6a, 0x72, 0x49, 0x66, 0x7e, 0x9e, 0x7f, 0x41, 0x6a,
	0x9e, 0x00, 0x83, 0x90, 0x30, 0x17, 0x3f, 0x42, 0xcc, 0x39, 0x27, 0xbf, 0x38, 0x55, 0x80, 0x51,
	0x88, 0x83, 0x8b, 0xc5, 0x05, 0xa8, 0x5b, 0x80, 0x29, 0x89, 0x0d, 0x6c, 0xb3, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xdc, 0x5f, 0xeb, 0x54, 0xce, 0x00, 0x00, 0x00,
}
